name: Code Quality

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  lint-backend:
    name: Lint Backend
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 18
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json

    - name: Install backend dependencies
      run: |
        cd backend
        npm ci

    - name: Run backend linting
      run: |
        cd backend
        npm run lint || echo "No lint script found, skipping..."

  lint-frontend:
    name: Lint Frontend
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 18
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install frontend dependencies
      run: |
        cd frontend
        npm ci

    - name: Run frontend linting
      run: |
        cd frontend
        npm run lint || echo "No lint script found, skipping..."

  check-dependencies:
    name: Check Dependencies
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 18

    - name: Check for outdated dependencies
      run: |
        echo "Checking backend dependencies..."
        cd backend && npm outdated || echo "No outdated dependencies found"
        echo "Checking frontend dependencies..."
        cd ../frontend && npm outdated || echo "No outdated dependencies found"

  validate-docker:
    name: Validate Docker
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Validate docker-compose.yml
      run: |
        docker-compose config

    - name: Validate Dockerfiles
      run: |
        echo "Validating backend Dockerfile..."
        docker build --dry-run -f backend/Dockerfile backend/
        echo "Validating frontend Dockerfile..."
        docker build --dry-run -f frontend/Dockerfile frontend/ 